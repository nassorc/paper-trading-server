// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum WalletTransactionType {
  DEPOSIT
  WITHDRAWAL
}
enum StockOrderType {
  PURCHASE
  SELL
}

model User {
  id Int @id @unique @default(autoincrement())
  username String @unique @db.VarChar(64)
  password String @db.VarChar(64)
  transactions StockTransaction[]
  portfolio Portfolio?
  wallet Wallet?
  watchlist Watchlist?
}

model Wallet {
  id Int @id @default(autoincrement())
  funds Float @default(0)
  totalAmount Float @default(0)
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int @unique
  history WalletHistory[]
}

model WalletHistory {
  id Int @id @default(autoincrement())
  type WalletTransactionType 
  transactionAmount Float 
  runningBalance Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  wallet Wallet @relation(fields: [walletId], references: [id])
  walletId Int
}

model Stock {
  id Int @id @default(autoincrement())
  symbol String @db.VarChar(64) @unique
  transaction StockTransaction[] 
  watchlists Watchlist[]
  portfolioHoldings PurchasedStock[]

  @@index([symbol])
}

model StockTransaction {
  id Int @id @default(autoincrement())
  stock Stock[]
  orderAmount Float
  quantity Int
  type StockOrderType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade) 
  userId Int 
	@@map("StockOrder")
}

model Portfolio {
  id Int @id @default(autoincrement())
  gains Float @default(0)
  investor User @relation(fields: [investorId], references: [id], onDelete: Cascade)
  investorId Int @unique
  stocks PurchasedStock[]

  @@index([investorId])
}

model PurchasedStock {
  id Int @id @default(autoincrement())
  symbol Stock @relation(fields: [symbolId], references: [id])
  symbolId Int
  quantity Int
  portfolio Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  portfolioId Int 
  investorId Int

  @@unique([symbolId, investorId], name: "stock_portfolio_id")
}

model Watchlist {
  id Int @id @default(autoincrement())
  symbols Stock[]
  investor User @relation(fields: [investorId], references: [id], onDelete: Cascade)
  investorId Int @unique
}